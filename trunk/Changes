Cortex 6.0.0
============

Features :

* New Nuke plugin provides hosting of procedurals and ops within Nuke.

* IECoreHoudini has a context for safely setting parmater values within a with block

Improvements :

* DisplayDriver factory mechanism has been improved, and support for mapping RenderMan displays to IECore::DisplayDrivers has been added to IECoreRI. Images can now be rendered direct to memory using 3delight with no intermediate rib or image files. See test/IECoreRI/DspyTest.py for examples.

* AttributeCache now performs validation of names for headers, objects and attributes.

* IECoreMaya::ToMayaImageConverter and IECoreMaya::FromMayaImageConverter now have python bindings. See test/IECoreMaya/ImageConverterTest.py for examples.

* ToMayaPlugConverter can now set plugs which expect IECoreMaya::ObjectData values.

* IECoreGL::Renderer provides control over GL_DEPTH_TEST with the new gl:depthTest attribute.

* IECoreRI now accepts V3fData and V3fVectorData as values for shader parameters of type float[3]. This is handy for passing vectors when you do not want the automatic object->current transformation to be performed.

Changes :

* Removed deprecated methods from InterpolatedCache - all queries now specify a frame, allowing efficient sharing of one cache among multiple threads.

* Removed deprecated methods classParameterModificationContext, setClassParameterClass and setClassVectorParameterClasses from IECoreMaya.FnParameterisedHolder. The parameterModificationContext method should be used instead.

* Removed deprecated IECore.initializeLog function - a FilteredMessageHandler created based on IECORE_LOG_LEVEL is automatically created now anyway.

Bug fixes :

* Fixed crashes caused by using SxRenderer with texture lookup shaders in multiple threads.

* TriangulateOp no longer changes the mesh interpolation.

* IECoreRI::GXEvaluator no longer crashes when zero length arrays are passed to the evaluate() method.

* Fixed bug which caused results from the wrong face to be returned when using the GXEValuator s,t based query.

* Fixed bugs which prevented NukeFileExaminer working with spaces in filenames or with Nuke's new # based padding syntax.

* Fixed bug which caused SequenceLsOp to perform modificationTime comparisons in the wrong timezone.
