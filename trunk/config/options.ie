##########################################################################
#
#  Copyright (c) 2007-2008, Image Engine Design Inc. All rights reserved.
#
#  Redistribution and use in source and binary forms, with or without
#  modification, are permitted provided that the following conditions are
#  met:
#
#     * Redistributions of source code must retain the above copyright
#       notice, this list of conditions and the following disclaimer.
#
#     * Redistributions in binary form must reproduce the above copyright
#       notice, this list of conditions and the following disclaimer in the
#       documentation and/or other materials provided with the distribution.
#
#     * Neither the name of Image Engine Design nor the names of any
#       other contributors to this software may be used to endorse or
#       promote products derived from this software without specific prior
#       written permission.
#
#  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS
#  IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO,
#  THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR
#  PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR
#  CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,
#  EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,
#  PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR
#  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF
#  LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING
#  NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
#  SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
#
##########################################################################

import os
import sys
import os.path
import IEEnv

def getOption( name, default ) :

	import sys
	result = default
	for a in sys.argv :
		if a[:len(name)+1]==name+"=" :	
			result = a[len(name)+1:]

	return result

# get the compiler location using the registry
platform = IEEnv.platform()
compiler = getOption( "COMPILER", IEEnv.registry["platformDefaults"][platform]["compiler"] )
compilerVersion = getOption( "COMPILER_VERSION", IEEnv.registry["platformDefaults"][platform]["compilerVersion"]  )
compilerReg = IEEnv.registry["compilers"][compiler][compilerVersion][platform]

# We need to set these so that ENV_VARS_TO_IMPORT can supply the correct environment to the scons test environments
os.environ["COMPILER"] = compiler
os.environ["COMPILER_VERSION"] = compilerVersion

CXX = os.path.join( compilerReg["location"], compilerReg["bin"] )

# set the include paths
BOOST_INCLUDE_PATH = "/software/tools/include/boost/1.35.0"
OPENEXR_INCLUDE_PATH = "/software/tools/include/OpenEXR/1.4.0"
TIFF_INCLUDE_PATH = "/software/tools/include/tiff/3.8.2"
JPEG_INCLUDE_PATH = "/software/tools/include/jpeg/6b"
GLEW_INCLUDE_PATH = '/software/tools/include/glew/1.4.0'
FREETYPE_INCLUDE_PATH = "/software/tools/include/freetype/2.3.5/freetype2"
CPPPATH = "/software/tools/include/freetype/2.3.5"

# figure out the boost lib suffix
compilerVersionSplit = compilerVersion.split( "." )
if IEEnv.platformOS() == "osx104" :
	BOOST_LIB_SUFFIX = "-mt-1_35"
else:
	BOOST_LIB_SUFFIX = "-" + compiler + compilerVersionSplit[0] + compilerVersionSplit[1] + "-mt-1_35"

# find the right libraries based on compiler and platform
LIBPATH = "/software/tools/lib/" + platform + "/" + compiler + "/" + compilerVersion

# ignore python-config stuff and specify it all explicitly ourselves
pythonVersion = getOption( "PYTHON_VERSION", "2.5" )
pythonReg = IEEnv.registry['apps']['python'][pythonVersion][IEEnv.platform()]

pythonRoot = os.path.join( pythonReg["location"], compiler, compilerVersion )

if IEEnv.platformOS() == "osx104" :
	pythonRoot = os.path.join( pythonRoot, "Python.framework", "Versions", pythonVersion )

PYTHON = os.path.join( pythonRoot, "bin", "python" + pythonVersion )
PYTHON_INCLUDE_PATH = pythonReg["location"] + "/" + compiler + "/" + compilerVersion + "/" + pythonReg["include"] + "/python" + pythonVersion
PYTHON_LINK_FLAGS = pythonReg["moduleLinkFlags"]
if PYTHON_LINK_FLAGS=="" :
	PYTHON_LINK_FLAGS = "-L" + pythonReg["location"] + "/" + compiler + "/" + compilerVersion + "/lib -lpython" + pythonVersion 
	
# find 3delight
try :
	dlReg = IEEnv.registry["apps"]["3delight"][getOption( "DL_VERSION", os.environ["DL_VERSION"] )][platform]
	RMAN_ROOT = dlReg["location"]
	os.environ["DELIGHT_CONF"] = "/software/config/3delight"
except :
	pass
	
# find maya
mayaVersion = getOption( "MAYA_VERSION", os.environ["MAYA_VERSION"] )
mayaMajorVersion = mayaVersion
try :
	mayaReg = IEEnv.registry["apps"]["maya"][mayaVersion][platform]
	mayaMajorVersion = mayaReg["majorVersion"]
	if compiler==mayaReg["compiler"] and compilerVersion==mayaReg["compilerVersion"] :
		MAYA_ROOT = mayaReg["location"]
except :
	pass

# find nuke
try :
	nukeVersion = getOption( "NUKE_VERSION", os.environ["NUKE_VERSION"] )
	nukeReg = IEEnv.registry["apps"]["nuke"][nukeVersion][platform]
	if compiler==nukeReg["compiler"] and compilerVersion==nukeReg["compilerVersion"] :
		NUKE_ROOT = nukeReg["location"]
		INSTALL_NUKELIB_NAME = "$INSTALL_PREFIX/tools/nuke/" + nukeVersion + "/" + platform + "/lib/$IECORE_NAME-$IECORE_MAJORMINORPATCH_VERSION"
except :
	pass
	
# find truelight
try :
	truelightReg = IEEnv.registry["apps"]["truelight"][getOption( "TRUELIGHT_VERSION", os.environ["TRUELIGHT_VERSION"] )][platform]
	TRUELIGHT_ROOT = truelightReg["location"]
except :
	pass
	
# find doxygen
DOXYGEN = os.path.join( "/software/apps/doxygen", os.environ["DOXYGEN_VERSION"], platform, "bin", "doxygen" )

# ask for opengl support
WITH_GL=1

# import vars we need to get our doxygen and python wrappers working
ENV_VARS_TO_IMPORT="PATH COMPILER COMPILER_VERSION PYTHONPATH IEENV_ROOT IEENV_WORKING_PATH IEENV_LIBRARY_PREFIX_PATH DOXYGEN_VERSION IEENV_DEBUG IEENV_DEBUG_PYTHON IEENV_DEBUGGER IEENV_DEBUGGER_ARGS DELIGHT_CONF SCONS_VERSION"

# make sure the tests can run
TEST_LIBPATH = ":".join( [ pythonReg["location"] + "/" + compiler + "/" + compilerVersion + "/lib", compilerReg["location"] + "/lib" ] )

# get the installation locations right
INSTALL_PREFIX = getOption( "INSTALL_PREFIX", os.path.expanduser( "~" ) )

# \todo Remove this before release
if INSTALL_PREFIX != os.path.expanduser( "~" ) :
	raise RuntimeError( "Cannot install to anywhere but " + os.path.expanduser( "~" ) + "!" )

INSTALL_HEADER_DIR = "$INSTALL_PREFIX/tools/include/cortex/$IECORE_MAJORMINORPATCH_VERSION"
INSTALL_LIB_NAME = "$INSTALL_PREFIX/tools/lib/" + platform + "/" + compiler + "/" + compilerVersion + "/$IECORE_NAME-$IECORE_MAJORMINORPATCH_VERSION"
INSTALL_PYTHON_DIR = "$INSTALL_PREFIX/tools/python/2.5/" + platform + "/" + compiler + "/" + compilerVersion + "/cortex/$IECORE_MAJORMINORPATCH_VERSION"
INSTALL_GLSL_HEADER_DIR =  "$INSTALL_PREFIX/tools/glsl/$IECORE_NAME/$IECORE_MAJORMINORPATCH_VERSION"
INSTALL_DOC_DIR = "$INSTALL_PREFIX/doc/tools/lib/cortex/$IECORE_MAJORMINORPATCH_VERSION"
INSTALL_MEL_DIR = "$INSTALL_PREFIX/tools/maya/" + mayaMajorVersion + "/mel/cortex/$IECORE_MAJORMINORPATCH_VERSION/$IECORE_NAME"
INSTALL_MAYAPLUGIN_NAME = "$INSTALL_PREFIX/tools/maya/" + mayaMajorVersion + "/plugins/" + platform + "/cortex/$IECORE_MAJORMINORPATCH_VERSION/$IECORE_NAME"
WITH_MAYA_PLUGIN_LOADER = 1

# set up a post install script to make op wrappers for IECore
INSTALL_CORE_POST_COMMAND="scons -f config/ie/installOps INSTALLPREFIX=$INSTALL_PREFIX MAJOR=$IECORE_MAJOR_VERSION MINOR=$IECORE_MINOR_VERSION PATCH=$IECORE_PATCH_VERSION install"

# set up a post install script to make op wrappers for IECoreTruelight
INSTALL_CORETRUELIGHT_POST_COMMAND="scons -f config/ie/installTruelightOps INSTALLPREFIX=$INSTALL_PREFIX MAJOR=$IECORE_MAJOR_VERSION MINOR=$IECORE_MINOR_VERSION PATCH=$IECORE_PATCH_VERSION install"

# speed up the build a bit hopefully. we're not doing this on the mac for two reasons. firstly, the macs don't mount /hosts.
# secondly, scons doesn't recognise that the intel macs are different to the ppc and will try to cache them both the same.
# we could probably fix both these things if it becomes important.
if IEEnv.platformOS() == "osx104" :
	BUILD_CACHEDIR = "/tmp/sconsBuildCache/" + platform
else:
	BUILD_CACHEDIR = "/hosts/wrkpogo01/sconsBuildCache"
