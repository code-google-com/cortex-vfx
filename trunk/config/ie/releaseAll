#!/usr/bin/env python

import IEEnv
import subprocess
import sys
import os
import os.path
import shutil

global args
args = [ "scons", "install", "INSTALL_PREFIX=/software" ]

def build( extraArgs = [] ) :

	global args
	
	buildArgs = list( args )
	buildArgs.extend( extraArgs )
	buildArgs.extend( sys.argv[1:] )	
	
	if subprocess.call( buildArgs ) != 0 :
	
		raise RuntimeError("Error : " + str( " ".join( buildArgs ) ) )

if IEEnv.platform() == "rhel4.i686" :

	build( [ "COMPILER_VERSION=4.0.2" ] )
	build( [ "COMPILER_VERSION=4.1.2" ] )
	build( [ "APP=maya", "APP_VERSION=2008" ] )
	build( [ "APP=nuke", "APP_VERSION=5.1v1" ] )
	build( [ "APP=nuke", "APP_VERSION=5.1v2" ] )
	build( [ "APP=nuke", "APP_VERSION=5.1v3" ] )
	build( [ "COMPILER_VERSION=3.4.6" ] )
	build( [ "COMPILER_VERSION=3.3.4" ] )
	build( [ "COMPILER_VERSION=4.0.1" ] )

	
elif IEEnv.platformOS() == "osx104" or IEEnv.platformOS() == "osx105" :
	
	if os.path.exists( ".sconsign.dblite" ) :
		
		os.remove( ".sconsign.dblite" )
		
	if os.path.exists( ".sconf_temp" ) :
		
		shutil.rmtree( ".sconf_temp" )	
	build()

elif IEEnv.platform() == "cent5.x86_64" :

	build( [ "COMPILER_VERSION=3.4.6" ] )
	build( [ "COMPILER_VERSION=4.1.2" ] )
	build( [ "APP=maya", "APP_VERSION=2009", "DL_VERSION=8.5.9" ] )
	build( [ "COMPILER_VERSION=4.1.2", "DL_VERSION=8.5.9" ] )
        build( [ "COMPILER_VERSION=4.1.2", "DL_VERSION=8.5.42" ] )
	build( [ "APP=nuke", "APP_VERSION=5.1v6" ] )
	build( [ "APP=nuke", "APP_VERSION=5.2v1" ] )
	build( [ "APP=houdini", "APP_VERSION=10.0.295" ] )

else :

	raise RuntimeError( "Unknown platform" )

