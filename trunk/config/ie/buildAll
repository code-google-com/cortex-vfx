#!/usr/bin/env python2.6

import IEEnv
import subprocess
import sys
import os
import os.path
import shutil

def build( extraArgs = [] ) :
	
	sysArgs = sys.argv[1:]
	
	install = False
	if "install" in sysArgs :
		install = True
		sysArgs.remove( "install" )
	
	release = False
	if "RELEASE=1" in sysArgs :
		release = True
		sysArgs.remove( "RELEASE=1" )
	
	if "J=" in " ".join( sysArgs ) :
		sysArgs = " ".join( sysArgs ).replace( "J=", "-j " ).split( " " )
	
	installPrefix = "/software" if release else os.path.expanduser( "~" )
	buildArgs = [ "INSTALL_PREFIX=" + installPrefix ]
	buildArgs.extend( extraArgs )
	buildArgs.extend( sysArgs )
	
	print " ".join( [ "scons" ] + buildArgs )
	if subprocess.call( [ "scons" ] + buildArgs ) != 0 :
	
		raise RuntimeError("Error : scons " + str( " ".join( buildArgs ) ) )
	
	if install or release :
	
		print " ".join( [ "scons", "install" ] + buildArgs )
		if subprocess.call( [ "scons", "install" ] + buildArgs ) != 0 :
		
			raise RuntimeError("Error : scons install " + str( " ".join( buildArgs ) ) )

def installDocs() :
	
	if "RELEASE=1" not in sys.argv :
		return
	
	buildArgs = [ "INSTALL_PREFIX=/software" ]
	
	if subprocess.call( [ "scons", "installDoc" ] + buildArgs ) != 0 :
	
		raise RuntimeError("Error : scons installDoc " + str( " ".join( buildArgs ) ) )

if IEEnv.platformOS() == "osx104" or IEEnv.platformOS() == "osx105" :
	
	if os.path.exists( ".sconsign.dblite" ) :
		
		os.remove( ".sconsign.dblite" )
		
	if os.path.exists( ".sconf_temp" ) :
		
		shutil.rmtree( ".sconf_temp" )	
		
	build()
	
	installDocs()

elif IEEnv.platform() == "cent5.x86_64" :
	
	build( [ "COMPILER_VERSION=4.1.2", "DL_VERSION=UNDEFINED", "PYTHON_VERSION=2.6", "ARNOLD_VERSION=4.0.6.0" ] )
	build( [ "COMPILER_VERSION=4.1.2", "DL_VERSION=10.0.43", "PYTHON_VERSION=2.6", "ARNOLD_VERSION=UNDEFINED" ] )
	build( [ "COMPILER_VERSION=4.1.2", "DL_VERSION=10.0.49", "PYTHON_VERSION=2.6", "ARNOLD_VERSION=UNDEFINED" ] )
	build( [ "COMPILER_VERSION=4.1.2", "DL_VERSION=10.0.60", "PYTHON_VERSION=2.6", "ARNOLD_VERSION=UNDEFINED" ] )
	build( [ "COMPILER_VERSION=4.1.2", "DL_VERSION=10.0.62", "PYTHON_VERSION=2.6", "ARNOLD_VERSION=UNDEFINED" ] )
	build( [ "COMPILER_VERSION=4.1.2", "DL_VERSION=10.0.76", "PYTHON_VERSION=2.6", "ARNOLD_VERSION=UNDEFINED" ] )
	build( [ "COMPILER_VERSION=4.1.2", "DL_VERSION=10.0.80", "PYTHON_VERSION=2.6", "ARNOLD_VERSION=UNDEFINED" ] )
	build( [ "APP=maya", "APP_VERSION=2012.sp1", "DL_VERSION=10.0.62", "ARNOLD_VERSION=4.0.6.0" ] )
	build( [ "APP=nuke", "APP_VERSION=6.3v5" ] )
	build( [ "APP=nuke", "APP_VERSION=6.3v7" ] )
	build( [ "APP=houdini", "APP_VERSION=12.0.562" ] )
	build( [ "APP=houdini", "APP_VERSION=12.0.694" ] )
	build( [ "APP=houdini", "APP_VERSION=12.1.77" ] )
	
	installDocs()

else :

	raise RuntimeError( "Unknown platform" )

